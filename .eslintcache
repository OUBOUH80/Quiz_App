[{"C:\\Users\\Dell\\Desktop\\Tuto_js\\mon-app\\src\\index.js":"1","C:\\Users\\Dell\\Desktop\\Tuto_js\\mon-app\\src\\reportWebVitals.js":"2","C:\\Users\\Dell\\Desktop\\Tuto_js\\mon-app\\src\\components\\App\\index.js":"3","C:\\Users\\Dell\\Desktop\\Tuto_js\\mon-app\\src\\components\\Header\\index.js":"4","C:\\Users\\Dell\\Desktop\\Tuto_js\\mon-app\\src\\components\\Landing\\index.js":"5","C:\\Users\\Dell\\Desktop\\Tuto_js\\mon-app\\src\\components\\Footer\\index.js":"6","C:\\Users\\Dell\\Desktop\\Tuto_js\\mon-app\\src\\components\\Welcome\\index.js":"7","C:\\Users\\Dell\\Desktop\\Tuto_js\\mon-app\\src\\components\\Login\\index.js":"8","C:\\Users\\Dell\\Desktop\\Tuto_js\\mon-app\\src\\components\\Signup\\index.js":"9","C:\\Users\\Dell\\Desktop\\Tuto_js\\mon-app\\src\\components\\ErrorPage\\index.js":"10","C:\\Users\\Dell\\Desktop\\Tuto_js\\mon-app\\src\\components\\Firebase\\index.js":"11","C:\\Users\\Dell\\Desktop\\Tuto_js\\mon-app\\src\\components\\Firebase\\context.js":"12","C:\\Users\\Dell\\Desktop\\Tuto_js\\mon-app\\src\\components\\Firebase\\firebase.js":"13","C:\\Users\\Dell\\Desktop\\Tuto_js\\mon-app\\src\\components\\Logout\\index.js":"14","C:\\Users\\Dell\\Desktop\\Tuto_js\\mon-app\\src\\components\\Quiz\\index.js":"15","C:\\Users\\Dell\\Desktop\\Tuto_js\\mon-app\\src\\components\\ForgetPassword\\index.js":"16","C:\\Users\\Dell\\Desktop\\Tuto_js\\mon-app\\src\\components\\Levels\\index.js":"17","C:\\Users\\Dell\\Desktop\\Tuto_js\\mon-app\\src\\components\\ProgressBar\\index.js":"18","C:\\Users\\Dell\\Desktop\\Tuto_js\\mon-app\\src\\components\\quizMarvel\\index.js":"19","C:\\Users\\Dell\\Desktop\\Tuto_js\\mon-app\\src\\components\\QuizOver\\index.js":"20","C:\\Users\\Dell\\Desktop\\Tuto_js\\mon-app\\src\\components\\Timer\\index.js":"21"},{"size":602,"mtime":1610030142715,"results":"22","hashOfConfig":"23"},{"size":362,"mtime":499162500000,"results":"24","hashOfConfig":"23"},{"size":1051,"mtime":1615417450819,"results":"25","hashOfConfig":"23"},{"size":277,"mtime":1611349966297,"results":"26","hashOfConfig":"23"},{"size":1678,"mtime":1615417444633,"results":"27","hashOfConfig":"23"},{"size":290,"mtime":1615645468508,"results":"28","hashOfConfig":"23"},{"size":1565,"mtime":1615417446957,"results":"29","hashOfConfig":"23"},{"size":2890,"mtime":1615417457505,"results":"30","hashOfConfig":"23"},{"size":3741,"mtime":1615417431361,"results":"31","hashOfConfig":"23"},{"size":598,"mtime":1615502587228,"results":"32","hashOfConfig":"23"},{"size":133,"mtime":1609584590400,"results":"33","hashOfConfig":"23"},{"size":113,"mtime":1610030265451,"results":"34","hashOfConfig":"23"},{"size":1128,"mtime":1610288426001,"results":"35","hashOfConfig":"23"},{"size":934,"mtime":1611055175877,"results":"36","hashOfConfig":"23"},{"size":9078,"mtime":1615497682061,"results":"37","hashOfConfig":"23"},{"size":2546,"mtime":1610140176568,"results":"38","hashOfConfig":"39"},{"size":1004,"mtime":1611014809027,"results":"40","hashOfConfig":"23"},{"size":891,"mtime":1615417426270,"results":"41","hashOfConfig":"23"},{"size":12771,"mtime":1615396792364,"results":"42","hashOfConfig":"23"},{"size":3599,"mtime":1615482979997,"results":"43","hashOfConfig":"23"},{"size":1139,"mtime":1615419566535,"results":"44","hashOfConfig":"23"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},"1il2z5t",{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"47"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"47"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"47"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},"dgn86b",{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},"C:\\Users\\Dell\\Desktop\\Tuto_js\\mon-app\\src\\index.js",[],["92","93"],"C:\\Users\\Dell\\Desktop\\Tuto_js\\mon-app\\src\\reportWebVitals.js",[],"C:\\Users\\Dell\\Desktop\\Tuto_js\\mon-app\\src\\components\\App\\index.js",[],"C:\\Users\\Dell\\Desktop\\Tuto_js\\mon-app\\src\\components\\Header\\index.js",[],"C:\\Users\\Dell\\Desktop\\Tuto_js\\mon-app\\src\\components\\Landing\\index.js",[],"C:\\Users\\Dell\\Desktop\\Tuto_js\\mon-app\\src\\components\\Footer\\index.js",[],"C:\\Users\\Dell\\Desktop\\Tuto_js\\mon-app\\src\\components\\Welcome\\index.js",["94"],"import React, { useState, Fragment,useContext,useEffect } from 'react';\r\nimport { FirebaseContext } from '../Firebase';\r\nimport Logout from '../Logout';\r\nimport Quiz from '../Quiz';\r\nimport '../../App.css';\r\nconst Welcome = (porps) => {\r\n\r\n    const firebase=useContext(FirebaseContext)\r\n    const [userSession, setUserSession] = useState(null);\r\n    const [userData, setUserData] = useState({});\r\n\r\n\r\n    useEffect(() => {\r\n        let listener = firebase.auth.onAuthStateChanged(user => {\r\n            user ? setUserSession(user) : porps.history.push('/');\r\n           \r\n        })\r\n\r\n        if (!!userSession) {\r\n            firebase.user(userSession.uid)\r\n                .get()\r\n                .then(doc => {\r\n\r\n                    if (doc && doc.exists) {\r\n                        const myData = doc.data()\r\n                        setUserData(myData)\r\n                    }\r\n                })\r\n                .catch(error => {\r\n\r\n                })\r\n        }\r\n        \r\n\r\n\r\n        return () => {\r\n            listener();\r\n        };\r\n\r\n    }, [userSession, firebase])\r\n\r\n    return userSession === null ? (\r\n        <Fragment>\r\n            <div className=\"loader\"></div>\r\n        </Fragment>\r\n    ) : (\r\n            <div className=\"quiz-bg\">\r\n                <div className=\"container\">\r\n                    <Logout />\r\n                    <Quiz userData={userData}/>\r\n\r\n                </div>\r\n            </div>\r\n            \r\n            )\r\n        \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    \r\n        \r\n        \r\n       \r\n\r\n   \r\n}\r\n\r\nexport default Welcome;\r\n","C:\\Users\\Dell\\Desktop\\Tuto_js\\mon-app\\src\\components\\Login\\index.js",["95"],"import React, { useState, useEffect, useContext} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { FirebaseContext } from '../Firebase';\r\nimport '../../App.css';\r\nconst Login = (props) => {\r\n\r\n  const   firebase=useContext(FirebaseContext);\r\n\r\n\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [btn, setBtn] = useState(false);\r\n    const [error, setError] = useState('');\r\n\r\n    useEffect(() => {\r\n        if (password.length > 5 && email !== '') { setBtn(true) }\r\n        else if (btn) {setBtn(false)}\r\n    },[password,email])\r\n   \r\n    const handleSubmit = e => {\r\n\r\n        e.preventDefault();\r\n\r\n        firebase.loginUser(email, password)\r\n            .then(user => {\r\n                setEmail('');\r\n                setPassword('');\r\n                props.history.push('/welcome');\r\n            })\r\n            .catch(error => {\r\n                setError(error);\r\n                setEmail('');\r\n                setPassword(''); \r\n            })\r\n\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <div className=\"signUpLoginBox\">\r\n            <div className=\"slContainer\">\r\n                <div className=\"formBoxLeftLogin\">\r\n                </div>\r\n\r\n                <div className=\"formBoxRight\">\r\n\r\n                    <div className=\"formContent\">\r\n\r\n                        {error !== '' && <span>{ error.message}</span>}\r\n\r\n                        <h2>Connexion</h2>\r\n                        <form onSubmit={handleSubmit }>\r\n\r\n\r\n                            \r\n                            <div className=\"inputBox\">\r\n                                <input onChange={(e) => setEmail(e.target.value)} value={email} type=\"email\" id=\"email\" autoComplete=\"off\" required />\r\n                                <label htmlFor=\"email\">Email </label>\r\n                            </div>\r\n\r\n\r\n                            <div className=\"inputBox\">\r\n                                <input onChange={(e) => setPassword(e.target.value)} value={password} type=\"password\" id=\"password\" autoComplete=\"off\" required />\r\n                                <label htmlFor=\"password \">Mot de Passe </label>\r\n                            </div>\r\n\r\n\r\n\r\n                            {btn ? <button>Connexion</button> : <button disabled>Connexion</button>}\r\n                            \r\n\r\n                        </form>\r\n                        <div className=\"linkContainer\">\r\n                            <Link className=\"simpleLink\" to=\"/signup\">Nouveau ! Inscrivez-vous maintenet</Link>\r\n                            <br/>\r\n                            {/*<Link className=\"simpleLink\" to=\"/forgetpassword\">Mot de passe oublie ? Recuperer le ici</Link>*/}\r\n\r\n                        </div>\r\n                          \r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default Login;\r\n","C:\\Users\\Dell\\Desktop\\Tuto_js\\mon-app\\src\\components\\Signup\\index.js",[],"C:\\Users\\Dell\\Desktop\\Tuto_js\\mon-app\\src\\components\\ErrorPage\\index.js",[],"C:\\Users\\Dell\\Desktop\\Tuto_js\\mon-app\\src\\components\\Firebase\\index.js",[],"C:\\Users\\Dell\\Desktop\\Tuto_js\\mon-app\\src\\components\\Firebase\\context.js",[],"C:\\Users\\Dell\\Desktop\\Tuto_js\\mon-app\\src\\components\\Firebase\\firebase.js",[],"C:\\Users\\Dell\\Desktop\\Tuto_js\\mon-app\\src\\components\\Logout\\index.js",[],"C:\\Users\\Dell\\Desktop\\Tuto_js\\mon-app\\src\\components\\Quiz\\index.js",["96","97"],"import React, { Component, Fragment } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.min.css' \r\nimport '../../App.css';\r\nimport QuizOver from '../QuizOver';\r\nimport Levels from '../Levels';\r\nimport ProgressBar from '../ProgressBar';\r\nimport { QuizMarvel } from '../quizMarvel';\r\n\r\n\r\n\r\n\r\ntoast.configure();\r\n\r\nclass Quiz extends React.Component {\r\n\r\n    constructor(props) { \r\n        super(props)\r\n        this.initialState = {\r\n            levlNames: [\"debutant\", \"confirme\", \"expert\"],\r\n            quizLevel: 0,\r\n            maxQuestions: 10,\r\n            storedQuestions: [],\r\n            question: null,\r\n            options: [],\r\n            idQuestion: 0,\r\n            userAnswer: null,\r\n            btnDisabled: true,\r\n            score: 0,\r\n            showWelcomeMsg: false,\r\n            quizEnd: false,\r\n            percent: 0,\r\n            count: 5,\r\n            visibilityStart: 'visible',\r\n            visibiltyTimer: 'hidden',\r\n            classe: \"tweety\",\r\n            displaybtn:\"flex\"\r\n\r\n        }\r\n\r\n        this.state = this.initialState;\r\n        this.startTimer = this.startTimer.bind(this);\r\n        this.stopTimer = this.stopTimer.bind(this);\r\n        this.resetTimer = this.resetTimer.bind(this);\r\n        ;\r\n    }\r\n\r\n    startTimer() {\r\n\r\n        this.timer = setInterval(() => \r\n            this.setState({\r\n                count: this.state.count - 1\r\n            }),1000\r\n        )\r\n        this.setState({ visibilityStart: 'hidden', visibiltyTimer: 'visible', classe: \"quiz\", displaybtn:\"none\" })\r\n\r\n        }\r\n\r\n    \r\n    stopTimer() {\r\n        clearInterval(this.timer)\r\n    }\r\n    resetTimer() {\r\n        this.setState({count:5})\r\n    }\r\n\r\n  \r\n    \r\n  \r\n   \r\n\r\n\r\n    storedDataRef = React.createRef();\r\n    loadQuestions = quizz => {\r\n\r\n        const fetchedArrayQuiz = QuizMarvel[0].quizz[quizz];\r\n\r\n\r\n        if (fetchedArrayQuiz.length >= this.state.maxQuestions) {\r\n            const newArry = fetchedArrayQuiz.map(({ answer, ...keepRest }) => keepRest)\r\n            this.storedDataRef.current = fetchedArrayQuiz;\r\n            this.setState({\r\n                storedQuestions: newArry\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    showToastMsg = pseudo => {\r\n        if (!this.state.showWelcomeMsg) {\r\n\r\n            this.setState(\r\n\r\n                {\r\n                    showWelcomeMsg:true\r\n                })\r\n\r\n            toast.warn(`Bienvune ${pseudo} et bonne chance ;) `, {\r\n\r\n                position: \"top-right\",\r\n                autoClose: 2000,\r\n                hideProgressBar: false,\r\n                closeOnclick: true,\r\n                pauseOnHover: true,\r\n                draggable: false\r\n            });\r\n}\r\n\r\n        \r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        this.loadQuestions(this.state.levlNames[this.state.quizLevel]);\r\n       \r\n\r\n\r\n    }\r\n\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n\r\n        if ((this.state.storedQuestions !== prevState.storedQuestions) && this.state.storedQuestions.length) {\r\n            this.setState({\r\n                question: this.state.storedQuestions[this.state.idQuestion].question,\r\n                options: this.state.storedQuestions[this.state.idQuestion].options\r\n            });\r\n        \r\n            \r\n        }\r\n\r\n\r\n\r\n        if ((this.state.idQuestion !== prevState.idQuestion) &&this.state.storedQuestions.length ) {\r\n            this.setState({\r\n                question: this.state.storedQuestions[this.state.idQuestion].question,\r\n                options: this.state.storedQuestions[this.state.idQuestion].options,\r\n                userAnswer: null,\r\n                btnDisabled: true\r\n            });\r\n        }\r\n\r\n        if (this.props.userData.pseudo !== prevProps.userData.pseudo ) {\r\n            this.showToastMsg(this.props.userData.pseudo);\r\n\r\n        }\r\n\r\n        if (this.state.quizEnd !== prevState.quizEnd) {\r\n            const gradepercent = this.getPersontage(this.state.maxQuestions, this.state.score)\r\n            this.gameOver(gradepercent);\r\n        }\r\n        if (this.state.count == 0) {\r\n          \r\n            this.nextQuestion();\r\n            this.resetTimer();\r\n            \r\n        }\r\n\r\n       \r\n    }\r\n\r\n        submitAnswer = selectedAnswer => {\r\n            this.setState({\r\n                userAnswer: selectedAnswer,\r\n                btnDisabled: false\r\n            })\r\n        }\r\n\r\n\r\n\r\n    \r\n\r\n    nextQuestion = () => {\r\n        if (this.state.idQuestion === this.state.maxQuestions - 1) {\r\n\r\n            this.setState({ quizEnd: true })\r\n            this.stopTimer();\r\n\r\n        } else {\r\n           \r\n                this.resetTimer();\r\n                this.setState(prevState => ({ idQuestion: prevState.idQuestion + 1 }))\r\n            \r\n        }\r\n      const goodAnswer = this.storedDataRef.current[this.state.idQuestion].answer;\r\n            if (this.state.userAnswer === goodAnswer) {\r\n                this.setState(prevState => ({\r\n                    score: prevState.score + 1\r\n                }));\r\n  \r\n                 \r\n\r\n                toast.success(`Bravo +1 ${this.props.userData.pseudo} ;) `, {\r\n                    position: \"top-right\",\r\n                    autoClose: 2000,\r\n                    hideProgressBar: false,\r\n                    closeOnclick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: false\r\n                });\r\n            } else {\r\n\r\n                toast.error(`Echoue 0 `, {\r\n\r\n                    position: \"top-right\",\r\n                    autoClose: 2000,\r\n                    hideProgressBar: false,\r\n                    closeOnclick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: false,\r\n                    bodyClasseName:\"toastify-color\"\r\n                });\r\n            }\r\n\r\n    }\r\n\r\n    getPersontage = (maxQuestuion, ourscore) =>  (ourscore / maxQuestuion)*100\r\n\r\n    gameOver = percent => {\r\n\r\n       \r\n\r\n        if (percent > 50) {\r\n            this.setState({\r\n                quizLevel: this.state.quizLevel + 1,\r\n                percent: percent\r\n            })\r\n            this.stopTimer();\r\n        } else {\r\n            this.setState({\r\n                percent: percent\r\n            })\r\n        }\r\n        \r\n        \r\n}\r\n    loadLevelQuestions = param => {\r\n\r\n        this.setState({ ...this.initialState, quizLevel:param })\r\n        this.loadQuestions(this.state.levlNames[param])\r\n    }\r\n\r\n\r\n\r\n    \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        render() {\r\n\r\n\r\n            const displayOptions = this.state.options.map((option, index) => {\r\n                return (\r\n                    <p key={index}\r\n                        className={`answerOptions ${this.state.userAnswer === option ? \"selected\" : null}`}\r\n                        onClick={() => this.submitAnswer(option)}\r\n                    >\r\n                        {option} </p>\r\n                )\r\n            })\r\n\r\n            return this.state.quizEnd ? (<QuizOver\r\n                ref={this.storedDataRef}\r\n                levlNames={this.state.levlNames}\r\n                score={this.state.score}\r\n                quizLevel={this.state.quizLevel}\r\n                maxQuestions={this.state.maxQuestions}\r\n                percent={this.state.percent}\r\n                loadLevelQuestions={this.loadLevelQuestions}\r\n                />)\r\n                :\r\n                (\r\n                    <Fragment>\r\n                        <Levels\r\n                            levlNames={this.state.levlNames}\r\n                            quizLevel={this.state.quizLevel}\r\n                        />\r\n                        <ProgressBar\r\n                            idQuestion={this.state.idQuestion}\r\n                            maxQuestions={this.state.maxQuestions}\r\n                        />\r\n                        <div >\r\n                            \r\n                            <p\r\n                                className=\"timer\"\r\n                                style={{ visibility: this.state.visibiltyTimer }}\r\n                            >Timer: {this.state.count}</p>\r\n                        </div>\r\n                        <div className={this.state.classe}>\r\n                            <button className=\"start\"\r\n                                onClick={this.startTimer}\r\n                                style={{ visibility: this.state.visibilityStart, display: this.state.displaybtn }}\r\n                            >Start</button>\r\n                            <div style={{ visibility: this.state.visibiltyTimer }}>   \r\n                <h2>{this.state.question}</h2>\r\n                {displayOptions}\r\n                        <button\r\n                            disabled={this.state.btnDisabled}\r\n                            className=\"btnSubmit\"\r\n                            onClick={this.nextQuestion}\r\n                        >\r\n                            {this.state.idQuestion < this.state.maxQuestions - 1 ? \"Suivant \" : \"Terminer\"}\r\n                                </button></div></div>\r\n                    </Fragment>)\r\n\r\n            \r\n        }\r\n\r\n\r\n    }\r\n\r\nexport default Quiz;\r\n","C:\\Users\\Dell\\Desktop\\Tuto_js\\mon-app\\src\\components\\ForgetPassword\\index.js",[],["98","99"],"C:\\Users\\Dell\\Desktop\\Tuto_js\\mon-app\\src\\components\\Levels\\index.js",[],"C:\\Users\\Dell\\Desktop\\Tuto_js\\mon-app\\src\\components\\ProgressBar\\index.js",[],"C:\\Users\\Dell\\Desktop\\Tuto_js\\mon-app\\src\\components\\quizMarvel\\index.js",[],"C:\\Users\\Dell\\Desktop\\Tuto_js\\mon-app\\src\\components\\QuizOver\\index.js",[],"C:\\Users\\Dell\\Desktop\\Tuto_js\\mon-app\\src\\components\\Timer\\index.js",[],{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","severity":1,"message":"105","line":40,"column":8,"nodeType":"106","endLine":40,"endColumn":31,"suggestions":"107"},{"ruleId":"104","severity":1,"message":"108","line":19,"column":7,"nodeType":"106","endLine":19,"endColumn":23,"suggestions":"109"},{"ruleId":"110","severity":1,"message":"111","line":1,"column":17,"nodeType":"112","messageId":"113","endLine":1,"endColumn":26},{"ruleId":"114","severity":1,"message":"115","line":152,"column":30,"nodeType":"116","messageId":"117","endLine":152,"endColumn":32},{"ruleId":"100","replacedBy":"118"},{"ruleId":"102","replacedBy":"119"},"no-native-reassign",["120"],"no-negated-in-lhs",["121"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'porps.history'. Either include it or remove the dependency array.","ArrayExpression",["122"],"React Hook useEffect has a missing dependency: 'btn'. Either include it or remove the dependency array.",["123"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["120"],["121"],"no-global-assign","no-unsafe-negation",{"desc":"124","fix":"125"},{"desc":"126","fix":"127"},"Update the dependencies array to be: [userSession, firebase, porps.history]",{"range":"128","text":"129"},"Update the dependencies array to be: [password, email, btn]",{"range":"130","text":"131"},[1056,1079],"[userSession, firebase, porps.history]",[586,602],"[password, email, btn]"]